{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport fetch from 'isomorphic-fetch';\n\nvar Certificate =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Certificate, _React$PureComponent);\n\n  function Certificate() {\n    _classCallCheck(this, Certificate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Certificate).apply(this, arguments));\n  }\n\n  _createClass(Certificate, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return __jsx(Container, null, __jsx(Row, {\n        className: \"justify-content-center\"\n      }, __jsx(Col, {\n        sm: 6,\n        xs: 12\n      }, __jsx(Card, {\n        border: \"info\"\n      }, __jsx(Card.Header, null, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'address-card']\n      }), __jsx(\"span\", null, \" Your certificate\")), __jsx(Card.Body, null, __jsx(Card.Text, null, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")))), __jsx(Col, null, __jsx(Card, {\n        border: \"primary\"\n      }, __jsx(Card.Header, null, \"Actions\"), __jsx(Card.Body, null, __jsx(Card.Text, null, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"))))));\n    }\n  }]);\n\n  return Certificate;\n}(React.PureComponent);\n\nCertificate.getInitialProps = function _callee(_ref) {\n  var req, baseURL, res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n          baseURL = req ? \"\".concat(req.protocol, \"://\").concat(req.get('Host')) : '';\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(baseURL, \"/api/register\")));\n\n        case 4:\n          res = _context.sent;\n          _context.t0 = res.status === 200;\n\n          if (!_context.t0) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 9:\n          _context.t0 = _context.sent;\n\n        case 10:\n          _context.t1 = _context.t0;\n          _context.t2 = res.status != 200;\n          return _context.abrupt(\"return\", {\n            certificate: _context.t1,\n            error: _context.t2\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Certificate;","map":{"version":3,"sources":["/home/mad/geodb/fabric-open-ca/app/src/pages/certificate.js"],"names":["React","Container","Row","Col","Card","FontAwesomeIcon","fetch","Certificate","console","log","props","PureComponent","getInitialProps","req","baseURL","protocol","get","res","status","json","certificate","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;IAEMC,W;;;;;;;;;;;;;6BACK;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEA,aACE,MAAC,SAAD,QACE,MAAC,GAAD;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE;AAAhB,SACE,MAAC,IAAD;AAAM,QAAA,MAAM,EAAC;AAAb,SACE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,cAAR;AAAvB,QADF,EAEE,wCAFF,CADF,EAKE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,IAAD,CAAM,IAAN,yGADF,CALF,CADF,CADF,EAgBE,MAAC,GAAD,QACE,MAAC,IAAD;AAAM,QAAA,MAAM,EAAC;AAAb,SACE,MAAC,IAAD,CAAM,MAAN,kBADF,EAEE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,IAAD,CAAM,IAAN,yGADF,CAFF,CADF,CAhBF,CADF,CADF;AAgCD;;;;EApCuBV,KAAK,CAACW,a;;AAuChCJ,WAAW,CAACK,eAAZ,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT;AACtBC,UAAAA,OADsB,GACZD,GAAG,aAAMA,GAAG,CAACE,QAAV,gBAAwBF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAxB,IAA4C,EADnC;AAAA;AAAA,2CAEVV,KAAK,WAAIQ,OAAJ,mBAFK;;AAAA;AAEtBG,UAAAA,GAFsB;AAAA,wBAKbA,GAAG,CAACC,MAAJ,KAAe,GALF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAKgBD,GAAG,CAACE,IAAJ,EALhB;;AAAA;AAAA;;AAAA;AAAA;AAAA,wBAMnBF,GAAG,CAACC,MAAJ,IAAc,GANK;AAAA;AAK1BE,YAAAA,WAL0B;AAM1BC,YAAAA,KAN0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAUA,eAAed,WAAf","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport fetch from 'isomorphic-fetch';\n\nclass Certificate extends React.PureComponent {\n  render() {\n    console.log(this.props);\n\n    return (\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col sm={6} xs={12}>\n            <Card border=\"info\">\n              <Card.Header>\n                <FontAwesomeIcon icon={['fas', 'address-card']} />\n                <span> Your certificate</span>\n              </Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card border=\"primary\">\n              <Card.Header>Actions</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nCertificate.getInitialProps = async ({ req }) => {\n  const baseURL = req ? `${req.protocol}://${req.get('Host')}` : '';\n  const res = await fetch(`${baseURL}/api/register`);\n\n  return {\n    certificate: res.status === 200 && (await res.json()),\n    error: res.status != 200\n  };\n};\n\nexport default Certificate;\n"]},"metadata":{},"sourceType":"module"}