{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport fetch from 'isomorphic-fetch';\n\nclass Certificate extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"tryingThis\", () => {\n      console.log('heyyy');\n      event.preventDefault();\n      fetch('http://localhost:3000/api/register').then(console.log).catch(console.error);\n    });\n  }\n\n  render() {\n    const {\n      error,\n      certificate\n    } = this.props;\n    return __jsx(Container, null, __jsx(Row, {\n      className: \"justify-content-center\"\n    }, __jsx(Col, {\n      sm: 6,\n      xs: 12\n    }, __jsx(Card, {\n      border: \"info\"\n    }, __jsx(Card.Header, null, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'address-card']\n    }), __jsx(\"span\", null, \" Your certificate\")), __jsx(Card.Body, null, __jsx(Card.Text, null, certificate || 'No certificate found')), __jsx(Card.Footer, null, __jsx(Button, {\n      variant: \"primary\",\n      onClick: this.tryingThis\n    }, \"Check\")))), __jsx(Col, null, __jsx(Card, {\n      border: \"primary\"\n    }, __jsx(Card.Header, null, \"Actions\"), __jsx(Card.Body, null, __jsx(Card.Text, null, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"))))));\n  }\n\n}\n\nCertificate.getInitialProps = async ({\n  req\n}) => {\n  const baseURL = req ? `${req.protocol}://${req.get('Host')}` : '';\n  const res = await fetch(`${baseURL}/api/register`);\n  return {\n    certificate: res.status === 200 && (await res.json()),\n    error: res.status != 200\n  };\n};\n\nexport default Certificate;","map":{"version":3,"sources":["/home/mad/geodb/fabric-open-ca/app/src/pages/certificate.js"],"names":["React","Container","Row","Col","Card","Button","FontAwesomeIcon","fetch","Certificate","PureComponent","console","log","event","preventDefault","then","catch","error","render","certificate","props","tryingThis","getInitialProps","req","baseURL","protocol","get","res","status","json"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,aAAhC,CAA8C;AAAA;AAAA;;AAAA,wCAC/B,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,KAAK,CAACC,cAAN;AACAN,MAAAA,KAAK,CAAC,oCAAD,CAAL,CACGO,IADH,CACQJ,OAAO,CAACC,GADhB,EAEGI,KAFH,CAESL,OAAO,CAACM,KAFjB;AAGD,KAP2C;AAAA;;AAS5CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA,KAAF;AAASE,MAAAA;AAAT,QAAyB,KAAKC,KAApC;AAEA,WACE,MAAC,SAAD,QACE,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE;AAAhB,OACE,MAAC,IAAD;AAAM,MAAA,MAAM,EAAC;AAAb,OACE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,cAAR;AAAvB,MADF,EAEE,wCAFF,CADF,EAKE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,IAAD,CAAM,IAAN,QAAYD,WAAW,IAAI,sBAA3B,CADF,CALF,EAQE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKE;AAAxC,eADF,CARF,CADF,CADF,EAkBE,MAAC,GAAD,QACE,MAAC,IAAD;AAAM,MAAA,MAAM,EAAC;AAAb,OACE,MAAC,IAAD,CAAM,MAAN,kBADF,EAEE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,IAAD,CAAM,IAAN,yGADF,CAFF,CADF,CAlBF,CADF,CADF;AAkCD;;AA9C2C;;AAiD9CZ,WAAW,CAACa,eAAZ,GAA8B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AAC/C,QAAMC,OAAO,GAAGD,GAAG,GAAI,GAAEA,GAAG,CAACE,QAAS,MAAKF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAgB,EAAxC,GAA4C,EAA/D;AACA,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAE,GAAEgB,OAAQ,eAAZ,CAAvB;AAEA,SAAO;AACLL,IAAAA,WAAW,EAAEQ,GAAG,CAACC,MAAJ,KAAe,GAAf,KAAuB,MAAMD,GAAG,CAACE,IAAJ,EAA7B,CADR;AAELZ,IAAAA,KAAK,EAAEU,GAAG,CAACC,MAAJ,IAAc;AAFhB,GAAP;AAID,CARD;;AAUA,eAAenB,WAAf","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport fetch from 'isomorphic-fetch';\n\nclass Certificate extends React.PureComponent {\n  tryingThis = () => {\n    console.log('heyyy');\n    event.preventDefault();\n    fetch('http://localhost:3000/api/register')\n      .then(console.log)\n      .catch(console.error);\n  };\n\n  render() {\n    const { error, certificate } = this.props;\n\n    return (\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col sm={6} xs={12}>\n            <Card border=\"info\">\n              <Card.Header>\n                <FontAwesomeIcon icon={['fas', 'address-card']} />\n                <span> Your certificate</span>\n              </Card.Header>\n              <Card.Body>\n                <Card.Text>{certificate || 'No certificate found'}</Card.Text>\n              </Card.Body>\n              <Card.Footer>\n                <Button variant=\"primary\" onClick={this.tryingThis}>\n                  Check\n                </Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card border=\"primary\">\n              <Card.Header>Actions</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nCertificate.getInitialProps = async ({ req }) => {\n  const baseURL = req ? `${req.protocol}://${req.get('Host')}` : '';\n  const res = await fetch(`${baseURL}/api/register`);\n\n  return {\n    certificate: res.status === 200 && (await res.json()),\n    error: res.status != 200\n  };\n};\n\nexport default Certificate;\n"]},"metadata":{},"sourceType":"module"}